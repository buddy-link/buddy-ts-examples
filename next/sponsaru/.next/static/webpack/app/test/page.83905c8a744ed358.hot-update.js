"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/test/page",{

/***/ "(app-pages-browser)/./src/components/force-graph.tsx":
/*!****************************************!*\
  !*** ./src/components/force-graph.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var force_graph__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! force-graph */ \"(app-pages-browser)/./node_modules/force-graph/dist/force-graph.mjs\");\n/* harmony import */ var _app_test_generateData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/app/test/generateData */ \"(app-pages-browser)/./src/app/test/generateData.ts\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3 */ \"(app-pages-browser)/./node_modules/d3/src/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nconst getPrunedTree = (nodesById)=>{\n    const visibleNodes = [];\n    const visibleLinks = [];\n    const traverseTree = (node)=>{\n        if (!node) return;\n        visibleNodes.push(node);\n        if (node.collapsed) return;\n        visibleLinks.push(...node.childLinks);\n        node.childLinks.map((link)=>nodesById[link.target]).forEach(traverseTree);\n    };\n    Object.values(nodesById).forEach((node)=>{\n        if (!node.collapsed) traverseTree(node);\n    });\n    return {\n        nodes: visibleNodes,\n        links: visibleLinks\n    };\n};\nconst GraphVisualization = ()=>{\n    _s();\n    const [graphData, setGraphData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        nodes: [],\n        links: []\n    });\n    const graphRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const initialData = (0,_app_test_generateData__WEBPACK_IMPORTED_MODULE_2__.generateGraphData)(200);\n        // Initialize nodes with collapsed state and childLinks\n        const nodes = initialData.nodes.map((node)=>({\n                ...node,\n                collapsed: true,\n                childLinks: []\n            }));\n        // Create a map of nodes by their ID\n        const nodesById = Object.fromEntries(nodes.map((node)=>[\n                node.id,\n                node\n            ]));\n        // Initialize links and assign child links to their parent nodes\n        const links = initialData.links;\n        links.forEach((link)=>{\n            const sourceNode = nodesById[link.source];\n            if (sourceNode) {\n                sourceNode.childLinks.push(link);\n            }\n        });\n        // Initial graph data with only the central nodes of each group visible\n        const initialNodes = nodes.filter((node)=>{\n            const groupNodes = nodes.filter((n)=>n.group === node.group);\n            return groupNodes[0].id === node.id;\n        });\n        setGraphData({\n            nodes: initialNodes,\n            links: []\n        });\n        const Graph = (0,force_graph__WEBPACK_IMPORTED_MODULE_4__[\"default\"])()(graphRef.current).width(0.8 * window.innerWidth).height(0.6 * window.innerHeight).graphData(getPrunedTree(nodesById)).nodeLabel(\"id\").nodeAutoColorBy(\"group\").linkVisibility(true).d3Force(\"link\", d3__WEBPACK_IMPORTED_MODULE_3__.forceLink().distance(20).strength(1)).d3Force(\"collision\", d3__WEBPACK_IMPORTED_MODULE_3__.forceCollide().radius(5)).onNodeHover((node)=>{\n            if (graphRef.current) {\n                graphRef.current.style.cursor = node && node.childLinks.length ? \"pointer\" : \"\";\n            }\n        }).onNodeClick((node)=>{\n            const n = node;\n            if (n.childLinks.length) {\n                n.collapsed = !n.collapsed;\n                setGraphData(getPrunedTree(nodesById));\n            }\n        }).nodeCanvasObject((node, ctx, globalScale)=>{\n            const label = node.id;\n            const fontSize = 12 / globalScale;\n            ctx.font = \"\".concat(fontSize, \"px Sans-Serif\");\n            if (node.id === \"1\") {\n                const img = new Image();\n                img.src = \"/logo.webp\";\n                img.onload = ()=>{\n                    ctx.drawImage(img, node.x - img.width / 2, node.y - img.height / 2);\n                };\n            } else {\n                ctx.fillStyle = node.color;\n                ctx.beginPath();\n                ctx.arc(node.x, node.y, 5, 0, 2 * Math.PI, false);\n                ctx.fill();\n                ctx.strokeStyle = \"rgba(0, 0, 0, 0.2)\";\n                ctx.stroke();\n            }\n            const textWidth = ctx.measureText(label).width;\n            const bckgDimensions = [\n                textWidth,\n                fontSize\n            ].map((n)=>n + fontSize * 0.2);\n            ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n            ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n            ctx.textAlign = \"center\";\n            ctx.textBaseline = \"middle\";\n            ctx.fillStyle = \"black\";\n            ctx.fillText(label, node.x, node.y);\n        });\n        const handleResize = ()=>{\n            Graph.width(0.8 * window.innerWidth);\n            Graph.height(0.6 * window.innerHeight);\n        };\n        window.addEventListener(\"resize\", handleResize);\n        return ()=>{\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (graphData.nodes.length > 0) {\n            const nodesById = Object.fromEntries(graphData.nodes.map((node)=>[\n                    node.id,\n                    node\n                ]));\n            const Graph = (0,force_graph__WEBPACK_IMPORTED_MODULE_4__[\"default\"])()(graphRef.current).width(0.8 * window.innerWidth).height(0.6 * window.innerHeight).graphData(graphData).nodeLabel(\"id\").nodeAutoColorBy(\"group\").linkVisibility(true)// .d3Force('link', d3.forceLink().distance(20).strength(1))\n            // .d3Force('collision', d3.forceCollide().radius(5))\n            .onNodeHover((node)=>{\n                if (graphRef.current) {\n                    graphRef.current.style.cursor = node && node.childLinks.length ? \"pointer\" : \"\";\n                }\n            }).onNodeClick((node)=>{\n                const n = node;\n                if (n.childLinks.length) {\n                    n.collapsed = !n.collapsed;\n                    setGraphData(getPrunedTree(nodesById));\n                }\n            }).nodeCanvasObject((node, ctx, globalScale)=>{\n                const label = node.id;\n                const fontSize = 12 / globalScale;\n                ctx.font = \"\".concat(fontSize, \"px Sans-Serif\");\n                if (node.id === \"1\") {\n                    const img = new Image();\n                    img.src = \"/logo.webp\";\n                    img.onload = ()=>{\n                        ctx.drawImage(img, node.x - img.width / 2, node.y - img.height / 2);\n                    };\n                } else {\n                    ctx.fillStyle = node.color;\n                    ctx.beginPath();\n                    ctx.arc(node.x, node.y, 5, 0, 2 * Math.PI, false);\n                    ctx.fill();\n                    ctx.strokeStyle = \"rgba(0, 0, 0, 0.2)\";\n                    ctx.stroke();\n                }\n                const textWidth = ctx.measureText(label).width;\n                const bckgDimensions = [\n                    textWidth,\n                    fontSize\n                ].map((n)=>n + fontSize * 0.2);\n                ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n                ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n                ctx.textAlign = \"center\";\n                ctx.textBaseline = \"middle\";\n                ctx.fillStyle = \"black\";\n                ctx.fillText(label, node.x, node.y);\n            });\n            const handleResize = ()=>{\n                Graph.width(0.8 * window.innerWidth);\n                Graph.height(0.6 * window.innerHeight);\n            };\n            window.addEventListener(\"resize\", handleResize);\n            return ()=>{\n                window.removeEventListener(\"resize\", handleResize);\n            };\n        }\n    }, [\n        graphData\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex items-center justify-center\",\n        style: {\n            overflow: \"hidden\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            id: \"graph\",\n            ref: graphRef,\n            style: {\n                width: \"80vw\",\n                height: \"60vh\",\n                border: \"1px solid #000\",\n                marginTop: \"32px\"\n            }\n        }, void 0, false, {\n            fileName: \"/Users/rafael/work/buddy-link/buddy-ts-examples/next/sponsaru/src/components/force-graph.tsx\",\n            lineNumber: 208,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/rafael/work/buddy-link/buddy-ts-examples/next/sponsaru/src/components/force-graph.tsx\",\n        lineNumber: 207,\n        columnNumber: 5\n    }, undefined);\n};\n_s(GraphVisualization, \"I8nEc+w+QiVP3DVtHUIvCiUYVZA=\");\n_c = GraphVisualization;\n/* harmony default export */ __webpack_exports__[\"default\"] = (GraphVisualization);\nvar _c;\n$RefreshReg$(_c, \"GraphVisualization\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2ZvcmNlLWdyYXBoLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFb0Q7QUFDZjtBQUN1QjtBQUNuQztBQWtCekIsTUFBTU0sZ0JBQWdCLENBQUNDO0lBQ3JCLE1BQU1DLGVBQXVCLEVBQUU7SUFDL0IsTUFBTUMsZUFBdUIsRUFBRTtJQUUvQixNQUFNQyxlQUFlLENBQUNDO1FBQ3BCLElBQUksQ0FBQ0EsTUFBTTtRQUNYSCxhQUFhSSxJQUFJLENBQUNEO1FBQ2xCLElBQUlBLEtBQUtFLFNBQVMsRUFBRTtRQUNwQkosYUFBYUcsSUFBSSxJQUFJRCxLQUFLRyxVQUFVO1FBQ3BDSCxLQUFLRyxVQUFVLENBQUVDLEdBQUcsQ0FBQyxDQUFDQyxPQUFTVCxTQUFTLENBQUNTLEtBQUtDLE1BQU0sQ0FBQyxFQUFFQyxPQUFPLENBQUNSO0lBQ2pFO0lBRUFTLE9BQU9DLE1BQU0sQ0FBQ2IsV0FBV1csT0FBTyxDQUFDLENBQUNQO1FBQ2hDLElBQUksQ0FBQ0EsS0FBS0UsU0FBUyxFQUFFSCxhQUFhQztJQUNwQztJQUVBLE9BQU87UUFBRVUsT0FBT2I7UUFBY2MsT0FBT2I7SUFBYTtBQUNwRDtBQUVBLE1BQU1jLHFCQUErQjs7SUFDbkMsTUFBTSxDQUFDQyxXQUFXQyxhQUFhLEdBQUd4QiwrQ0FBUUEsQ0FBbUM7UUFBRW9CLE9BQU8sRUFBRTtRQUFFQyxPQUFPLEVBQUU7SUFBQztJQUNwRyxNQUFNSSxXQUFXeEIsNkNBQU1BLENBQXdCO0lBRS9DRixnREFBU0EsQ0FBQztRQUNSLE1BQU0yQixjQUFjdkIseUVBQWlCQSxDQUFDO1FBRXRDLHVEQUF1RDtRQUN2RCxNQUFNaUIsUUFBZ0JNLFlBQVlOLEtBQUssQ0FBQ04sR0FBRyxDQUFDLENBQUNKLE9BQVU7Z0JBQ3JELEdBQUdBLElBQUk7Z0JBQ1BFLFdBQVc7Z0JBQ1hDLFlBQVksRUFBRTtZQUNoQjtRQUVBLG9DQUFvQztRQUNwQyxNQUFNUCxZQUFZWSxPQUFP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PzAxMzEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgRm9yY2VHcmFwaCBmcm9tICdmb3JjZS1ncmFwaCc7XG5pbXBvcnQgeyBnZW5lcmF0ZUdyYXBoRGF0YSB9IGZyb20gJ0AvYXBwL3Rlc3QvZ2VuZXJhdGVEYXRhJztcbmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJztcblxudHlwZSBOb2RlID0ge1xuICBpZDogc3RyaW5nO1xuICBncm91cDogbnVtYmVyO1xuICBjb2xvcjogc3RyaW5nO1xuICB4PzogbnVtYmVyO1xuICB5PzogbnVtYmVyO1xuICBjb2xsYXBzZWQ/OiBib29sZWFuO1xuICBjaGlsZExpbmtzPzogTGlua1tdO1xufTtcblxudHlwZSBMaW5rID0ge1xuICBpZDogc3RyaW5nO1xuICBzb3VyY2U6IHN0cmluZztcbiAgdGFyZ2V0OiBzdHJpbmc7XG59O1xuXG5jb25zdCBnZXRQcnVuZWRUcmVlID0gKG5vZGVzQnlJZDogeyBba2V5OiBzdHJpbmddOiBOb2RlIH0pID0+IHtcbiAgY29uc3QgdmlzaWJsZU5vZGVzOiBOb2RlW10gPSBbXTtcbiAgY29uc3QgdmlzaWJsZUxpbmtzOiBMaW5rW10gPSBbXTtcblxuICBjb25zdCB0cmF2ZXJzZVRyZWUgPSAobm9kZTogTm9kZSkgPT4ge1xuICAgIGlmICghbm9kZSkgcmV0dXJuO1xuICAgIHZpc2libGVOb2Rlcy5wdXNoKG5vZGUpO1xuICAgIGlmIChub2RlLmNvbGxhcHNlZCkgcmV0dXJuO1xuICAgIHZpc2libGVMaW5rcy5wdXNoKC4uLm5vZGUuY2hpbGRMaW5rcyEpO1xuICAgIG5vZGUuY2hpbGRMaW5rcyEubWFwKChsaW5rKSA9PiBub2Rlc0J5SWRbbGluay50YXJnZXRdKS5mb3JFYWNoKHRyYXZlcnNlVHJlZSk7XG4gIH07XG5cbiAgT2JqZWN0LnZhbHVlcyhub2Rlc0J5SWQpLmZvckVhY2goKG5vZGUpID0+IHtcbiAgICBpZiAoIW5vZGUuY29sbGFwc2VkKSB0cmF2ZXJzZVRyZWUobm9kZSk7XG4gIH0pO1xuXG4gIHJldHVybiB7IG5vZGVzOiB2aXNpYmxlTm9kZXMsIGxpbmtzOiB2aXNpYmxlTGlua3MgfTtcbn07XG5cbmNvbnN0IEdyYXBoVmlzdWFsaXphdGlvbjogUmVhY3QuRkMgPSAoKSA9PiB7XG4gIGNvbnN0IFtncmFwaERhdGEsIHNldEdyYXBoRGF0YV0gPSB1c2VTdGF0ZTx7IG5vZGVzOiBOb2RlW107IGxpbmtzOiBMaW5rW10gfT4oeyBub2RlczogW10sIGxpbmtzOiBbXSB9KTtcbiAgY29uc3QgZ3JhcGhSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQgfCBudWxsPihudWxsKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGluaXRpYWxEYXRhID0gZ2VuZXJhdGVHcmFwaERhdGEoMjAwKTtcblxuICAgIC8vIEluaXRpYWxpemUgbm9kZXMgd2l0aCBjb2xsYXBzZWQgc3RhdGUgYW5kIGNoaWxkTGlua3NcbiAgICBjb25zdCBub2RlczogTm9kZVtdID0gaW5pdGlhbERhdGEubm9kZXMubWFwKChub2RlKSA9PiAoe1xuICAgICAgLi4ubm9kZSxcbiAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICAgIGNoaWxkTGlua3M6IFtdLFxuICAgIH0pKTtcblxuICAgIC8vIENyZWF0ZSBhIG1hcCBvZiBub2RlcyBieSB0aGVpciBJRFxuICAgIGNvbnN0IG5vZGVzQnlJZCA9IE9iamVjdC5mcm9tRW50cmllcyhub2Rlcy5tYXAoKG5vZGUpID0+IFtub2RlLmlkLCBub2RlXSkpO1xuXG4gICAgLy8gSW5pdGlhbGl6ZSBsaW5rcyBhbmQgYXNzaWduIGNoaWxkIGxpbmtzIHRvIHRoZWlyIHBhcmVudCBub2Rlc1xuICAgIGNvbnN0IGxpbmtzOiBMaW5rW10gPSBpbml0aWFsRGF0YS5saW5rcztcbiAgICBsaW5rcy5mb3JFYWNoKChsaW5rKSA9PiB7XG4gICAgICBjb25zdCBzb3VyY2VOb2RlID0gbm9kZXNCeUlkW2xpbmsuc291cmNlXTtcbiAgICAgIGlmIChzb3VyY2VOb2RlKSB7XG4gICAgICAgIHNvdXJjZU5vZGUuY2hpbGRMaW5rcyEucHVzaChsaW5rKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIEluaXRpYWwgZ3JhcGggZGF0YSB3aXRoIG9ubHkgdGhlIGNlbnRyYWwgbm9kZXMgb2YgZWFjaCBncm91cCB2aXNpYmxlXG4gICAgY29uc3QgaW5pdGlhbE5vZGVzID0gbm9kZXMuZmlsdGVyKChub2RlKSA9PiB7XG4gICAgICBjb25zdCBncm91cE5vZGVzID0gbm9kZXMuZmlsdGVyKChuKSA9PiBuLmdyb3VwID09PSBub2RlLmdyb3VwKTtcbiAgICAgIHJldHVybiBncm91cE5vZGVzWzBdLmlkID09PSBub2RlLmlkO1xuICAgIH0pO1xuXG4gICAgc2V0R3JhcGhEYXRhKHsgbm9kZXM6IGluaXRpYWxOb2RlcywgbGlua3M6IFtdIH0pO1xuXG4gICAgY29uc3QgR3JhcGggPSBGb3JjZUdyYXBoKCkoZ3JhcGhSZWYuY3VycmVudCEpXG4gICAgICAud2lkdGgoMC44ICogd2luZG93LmlubmVyV2lkdGgpXG4gICAgICAuaGVpZ2h0KDAuNiAqIHdpbmRvdy5pbm5lckhlaWdodClcbiAgICAgIC5ncmFwaERhdGEoZ2V0UHJ1bmVkVHJlZShub2Rlc0J5SWQpKVxuICAgICAgLm5vZGVMYWJlbCgnaWQnKVxuICAgICAgLm5vZGVBdXRvQ29sb3JCeSgnZ3JvdXAnKVxuICAgICAgLmxpbmtWaXNpYmlsaXR5KHRydWUpXG4gICAgICAuZDNGb3JjZSgnbGluaycsIGQzLmZvcmNlTGluaygpLmRpc3RhbmNlKDIwKS5zdHJlbmd0aCgxKSlcbiAgICAgIC5kM0ZvcmNlKCdjb2xsaXNpb24nLCBkMy5mb3JjZUNvbGxpZGUoKS5yYWRpdXMoNSkpXG4gICAgICAub25Ob2RlSG92ZXIoKG5vZGUpID0+IHtcbiAgICAgICAgaWYgKGdyYXBoUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICBncmFwaFJlZi5jdXJyZW50LnN0eWxlLmN1cnNvciA9IG5vZGUgJiYgKG5vZGUgYXMgTm9kZSkuY2hpbGRMaW5rcyEubGVuZ3RoID8gJ3BvaW50ZXInIDogJyc7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAub25Ob2RlQ2xpY2soKG5vZGUpID0+IHtcbiAgICAgICAgY29uc3QgbiA9IG5vZGUgYXMgTm9kZTtcbiAgICAgICAgaWYgKG4uY2hpbGRMaW5rcyEubGVuZ3RoKSB7XG4gICAgICAgICAgbi5jb2xsYXBzZWQgPSAhbi5jb2xsYXBzZWQ7XG4gICAgICAgICAgc2V0R3JhcGhEYXRhKGdldFBydW5lZFRyZWUobm9kZXNCeUlkKSk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAubm9kZUNhbnZhc09iamVjdCgobm9kZTogTm9kZSwgY3R4LCBnbG9iYWxTY2FsZSkgPT4ge1xuICAgICAgICBjb25zdCBsYWJlbCA9IG5vZGUuaWQ7XG4gICAgICAgIGNvbnN0IGZvbnRTaXplID0gMTIgLyBnbG9iYWxTY2FsZTtcbiAgICAgICAgY3R4LmZvbnQgPSBgJHtmb250U2l6ZX1weCBTYW5zLVNlcmlmYDtcblxuICAgICAgICBpZiAobm9kZS5pZCA9PT0gJzEnKSB7XG4gICAgICAgICAgY29uc3QgaW1nID0gbmV3IEltYWdlKCk7XG4gICAgICAgICAgaW1nLnNyYyA9ICcvbG9nby53ZWJwJztcbiAgICAgICAgICBpbWcub25sb2FkID0gKCkgPT4ge1xuICAgICAgICAgICAgY3R4LmRyYXdJbWFnZShpbWcsIG5vZGUueCEgLSBpbWcud2lkdGggLyAyLCBub2RlLnkhIC0gaW1nLmhlaWdodCAvIDIpO1xuICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY3R4LmZpbGxTdHlsZSA9IG5vZGUuY29sb3I7XG4gICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICAgIGN0eC5hcmMobm9kZS54ISwgbm9kZS55ISwgNSwgMCwgMiAqIE1hdGguUEksIGZhbHNlKTtcbiAgICAgICAgICBjdHguZmlsbCgpO1xuICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICdyZ2JhKDAsIDAsIDAsIDAuMiknO1xuICAgICAgICAgIGN0eC5zdHJva2UoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHRleHRXaWR0aCA9IGN0eC5tZWFzdXJlVGV4dChsYWJlbCkud2lkdGg7XG4gICAgICAgIGNvbnN0IGJja2dEaW1lbnNpb25zID0gW3RleHRXaWR0aCwgZm9udFNpemVdLm1hcCgobikgPT4gbiArIGZvbnRTaXplICogMC4yKTtcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCknO1xuICAgICAgICBjdHguZmlsbFJlY3Qobm9kZS54ISAtIGJja2dEaW1lbnNpb25zWzBdIC8gMiwgbm9kZS55ISAtIGJja2dEaW1lbnNpb25zWzFdIC8gMiwgLi4uYmNrZ0RpbWVuc2lvbnMpO1xuICAgICAgICBjdHgudGV4dEFsaWduID0gJ2NlbnRlcic7XG4gICAgICAgIGN0eC50ZXh0QmFzZWxpbmUgPSAnbWlkZGxlJztcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICdibGFjayc7XG4gICAgICAgIGN0eC5maWxsVGV4dChsYWJlbCwgbm9kZS54ISwgbm9kZS55ISk7XG4gICAgICB9KTtcblxuICAgIGNvbnN0IGhhbmRsZVJlc2l6ZSA9ICgpID0+IHtcbiAgICAgIEdyYXBoLndpZHRoKDAuOCAqIHdpbmRvdy5pbm5lcldpZHRoKTtcbiAgICAgIEdyYXBoLmhlaWdodCgwLjYgKiB3aW5kb3cuaW5uZXJIZWlnaHQpO1xuICAgIH07XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlUmVzaXplKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZVJlc2l6ZSk7XG4gICAgfTtcbiAgfSwgW10pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGdyYXBoRGF0YS5ub2Rlcy5sZW5ndGggPiAwKSB7XG4gICAgICBjb25zdCBub2Rlc0J5SWQgPSBPYmplY3QuZnJvbUVudHJpZXMoZ3JhcGhEYXRhLm5vZGVzLm1hcCgobm9kZSkgPT4gW25vZGUuaWQsIG5vZGVdKSk7XG5cbiAgICAgIGNvbnN0IEdyYXBoID0gRm9yY2VHcmFwaCgpKGdyYXBoUmVmLmN1cnJlbnQhKVxuICAgICAgICAud2lkdGgoMC44ICogd2luZG93LmlubmVyV2lkdGgpXG4gICAgICAgIC5oZWlnaHQoMC42ICogd2luZG93LmlubmVySGVpZ2h0KVxuICAgICAgICAuZ3JhcGhEYXRhKGdyYXBoRGF0YSlcbiAgICAgICAgLm5vZGVMYWJlbCgnaWQnKVxuICAgICAgICAubm9kZUF1dG9Db2xvckJ5KCdncm91cCcpXG4gICAgICAgIC5saW5rVmlzaWJpbGl0eSh0cnVlKVxuICAgICAgICAvLyAuZDNGb3JjZSgnbGluaycsIGQzLmZvcmNlTGluaygpLmRpc3RhbmNlKDIwKS5zdHJlbmd0aCgxKSlcbiAgICAgICAgLy8gLmQzRm9yY2UoJ2NvbGxpc2lvbicsIGQzLmZvcmNlQ29sbGlkZSgpLnJhZGl1cyg1KSlcbiAgICAgICAgLm9uTm9kZUhvdmVyKChub2RlKSA9PiB7XG4gICAgICAgICAgaWYgKGdyYXBoUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIGdyYXBoUmVmLmN1cnJlbnQuc3R5bGUuY3Vyc29yID0gbm9kZSAmJiAobm9kZSBhcyBOb2RlKS5jaGlsZExpbmtzIS5sZW5ndGggPyAncG9pbnRlcicgOiAnJztcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5vbk5vZGVDbGljaygobm9kZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IG4gPSBub2RlIGFzIE5vZGU7XG4gICAgICAgICAgaWYgKG4uY2hpbGRMaW5rcyEubGVuZ3RoKSB7XG4gICAgICAgICAgICBuLmNvbGxhcHNlZCA9ICFuLmNvbGxhcHNlZDtcbiAgICAgICAgICAgIHNldEdyYXBoRGF0YShnZXRQcnVuZWRUcmVlKG5vZGVzQnlJZCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLm5vZGVDYW52YXNPYmplY3QoKG5vZGU6IE5vZGUsIGN0eCwgZ2xvYmFsU2NhbGUpID0+IHtcbiAgICAgICAgICBjb25zdCBsYWJlbCA9IG5vZGUuaWQ7XG4gICAgICAgICAgY29uc3QgZm9udFNpemUgPSAxMiAvIGdsb2JhbFNjYWxlO1xuICAgICAgICAgIGN0eC5mb250ID0gYCR7Zm9udFNpemV9cHggU2Fucy1TZXJpZmA7XG5cbiAgICAgICAgICBpZiAobm9kZS5pZCA9PT0gJzEnKSB7XG4gICAgICAgICAgICBjb25zdCBpbWcgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgICAgIGltZy5zcmMgPSAnL2xvZ28ud2VicCc7XG4gICAgICAgICAgICBpbWcub25sb2FkID0gKCkgPT4ge1xuICAgICAgICAgICAgICBjdHguZHJhd0ltYWdlKGltZywgbm9kZS54ISAtIGltZy53aWR0aCAvIDIsIG5vZGUueSEgLSBpbWcuaGVpZ2h0IC8gMik7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gbm9kZS5jb2xvcjtcbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgIGN0eC5hcmMobm9kZS54ISwgbm9kZS55ISwgNSwgMCwgMiAqIE1hdGguUEksIGZhbHNlKTtcbiAgICAgICAgICAgIGN0eC5maWxsKCk7XG4gICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSAncmdiYSgwLCAwLCAwLCAwLjIpJztcbiAgICAgICAgICAgIGN0eC5zdHJva2UoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb25zdCB0ZXh0V2lkdGggPSBjdHgubWVhc3VyZVRleHQobGFiZWwpLndpZHRoO1xuICAgICAgICAgIGNvbnN0IGJja2dEaW1lbnNpb25zID0gW3RleHRXaWR0aCwgZm9udFNpemVdLm1hcCgobikgPT4gbiArIGZvbnRTaXplICogMC4yKTtcbiAgICAgICAgICBjdHguZmlsbFN0eWxlID0gJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC44KSc7XG4gICAgICAgICAgY3R4LmZpbGxSZWN0KG5vZGUueCEgLSBiY2tnRGltZW5zaW9uc1swXSAvIDIsIG5vZGUueSEgLSBiY2tnRGltZW5zaW9uc1sxXSAvIDIsIC4uLmJja2dEaW1lbnNpb25zKTtcbiAgICAgICAgICBjdHgudGV4dEFsaWduID0gJ2NlbnRlcic7XG4gICAgICAgICAgY3R4LnRleHRCYXNlbGluZSA9ICdtaWRkbGUnO1xuICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSAnYmxhY2snO1xuICAgICAgICAgIGN0eC5maWxsVGV4dChsYWJlbCwgbm9kZS54ISwgbm9kZS55ISk7XG4gICAgICAgIH0pO1xuXG4gICAgICBjb25zdCBoYW5kbGVSZXNpemUgPSAoKSA9PiB7XG4gICAgICAgIEdyYXBoLndpZHRoKDAuOCAqIHdpbmRvdy5pbm5lcldpZHRoKTtcbiAgICAgICAgR3JhcGguaGVpZ2h0KDAuNiAqIHdpbmRvdy5pbm5lckhlaWdodCk7XG4gICAgICB9O1xuXG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlUmVzaXplKTtcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVSZXNpemUpO1xuICAgICAgfTtcbiAgICB9XG4gIH0sIFtncmFwaERhdGFdKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIiBzdHlsZT17eyBvdmVyZmxvdzogJ2hpZGRlbicgfX0+XG4gICAgICA8ZGl2XG4gICAgICAgIGlkPVwiZ3JhcGhcIlxuICAgICAgICByZWY9e2dyYXBoUmVmfVxuICAgICAgICBzdHlsZT17e1xuICAgICAgICAgIHdpZHRoOiAnODB2dycsXG4gICAgICAgICAgaGVpZ2h0OiAnNjB2aCcsXG4gICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICMwMDAnLFxuICAgICAgICAgIG1hcmdpblRvcDogJzMycHgnLFxuICAgICAgICB9fVxuICAgICAgPjwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgR3JhcGhWaXN1YWxpemF0aW9uO1xuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVN0YXRlIiwidXNlUmVmIiwiRm9yY2VHcmFwaCIsImdlbmVyYXRlR3JhcGhEYXRhIiwiZDMiLCJnZXRQcnVuZWRUcmVlIiwibm9kZXNCeUlkIiwidmlzaWJsZU5vZGVzIiwidmlzaWJsZUxpbmtzIiwidHJhdmVyc2VUcmVlIiwibm9kZSIsInB1c2giLCJjb2xsYXBzZWQiLCJjaGlsZExpbmtzIiwibWFwIiwibGluayIsInRhcmdldCIsImZvckVhY2giLCJPYmplY3QiLCJ2YWx1ZXMiLCJub2RlcyIsImxpbmtzIiwiR3JhcGhWaXN1YWxpemF0aW9uIiwiZ3JhcGhEYXRhIiwic2V0R3JhcGhEYXRhIiwiZ3JhcGhSZWYiLCJpbml0aWFsRGF0YSIsImZyb21FbnRyaWVzIiwiaWQiLCJzb3VyY2VOb2RlIiwic291cmNlIiwiaW5pdGlhbE5vZGVzIiwiZmlsdGVyIiwiZ3JvdXBOb2RlcyIsIm4iLCJncm91cCIsIkdyYXBoIiwiY3VycmVudCIsIndpZHRoIiwid2luZG93IiwiaW5uZXJXaWR0aCIsImhlaWdodCIsImlubmVySGVpZ2h0Iiwibm9kZUxhYmVsIiwibm9kZUF1dG9Db2xvckJ5IiwibGlua1Zpc2liaWxpdHkiLCJkM0ZvcmNlIiwiZm9yY2VMaW5rIiwiZGlzdGFuY2UiLCJzdHJlbmd0aCIsImZvcmNlQ29sbGlkZSIsInJhZGl1cyIsIm9uTm9kZUhvdmVyIiwic3R5bGUiLCJjdXJzb3IiLCJsZW5ndGgiLCJvbk5vZGVDbGljayIsIm5vZGVDYW52YXNPYmplY3QiLCJjdHgiLCJnbG9iYWxTY2FsZSIsImxhYmVsIiwiZm9udFNpemUiLCJmb250IiwiaW1nIiwiSW1hZ2UiLCJzcmMiLCJvbmxvYWQiLCJkcmF3SW1hZ2UiLCJ4IiwieSIsImZpbGxTdHlsZSIsImNvbG9yIiwiYmVnaW5QYXRoIiwiYXJjIiwiTWF0aCIsIlBJIiwiZmlsbCIsInN0cm9rZVN0eWxlIiwic3Ryb2tlIiwidGV4dFdpZHRoIiwibWVhc3VyZVRleHQiLCJiY2tnRGltZW5zaW9ucyIsImZpbGxSZWN0IiwidGV4dEFsaWduIiwidGV4dEJhc2VsaW5lIiwiZmlsbFRleHQiLCJoYW5kbGVSZXNpemUiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImRpdiIsImNsYXNzTmFtZSIsIm92ZXJmbG93IiwicmVmIiwiYm9yZGVyIiwibWFyZ2luVG9wIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/force-graph.tsx\n"));

/***/ })

});