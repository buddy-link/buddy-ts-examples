"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/test/page",{

/***/ "(app-pages-browser)/./src/app/test/generateData.ts":
/*!**************************************!*\
  !*** ./src/app/test/generateData.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateGraphData: function() { return /* binding */ generateGraphData; }\n/* harmony export */ });\nconst colors = [\n    \"red\",\n    \"green\",\n    \"blue\",\n    \"yellow\",\n    \"purple\",\n    \"orange\"\n];\nconst generateGraphData = (numNodes)=>{\n    const nodes = [];\n    const links = [];\n    const groups = {};\n    for(let i = 0; i < numNodes; i++){\n        const group = Math.floor(Math.random() * 5) + 1; // Número de grupos (ajuste conforme necessário)\n        const color = colors[group % colors.length];\n        const node = {\n            id: \"\".concat(i + 1),\n            group,\n            color\n        };\n        if (!groups[group]) {\n            groups[group] = [];\n        }\n        groups[group].push(node);\n        nodes.push(node);\n    }\n    Object.values(groups).forEach((groupNodes, groupIndex)=>{\n        groupNodes.forEach((node, index)=>{\n            if (index > 0) {\n                const targetIndex = Math.round(Math.random() * (index - 1));\n                links.push({\n                    source: groupNodes[0].id,\n                    target: node.id\n                });\n            }\n        });\n    });\n    return {\n        nodes,\n        links\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvdGVzdC9nZW5lcmF0ZURhdGEudHMiLCJtYXBwaW5ncyI6Ijs7OztBQW1CQSxNQUFNQSxTQUFTO0lBQUM7SUFBTztJQUFTO0lBQVE7SUFBVTtJQUFVO0NBQVM7QUFFOUQsTUFBTUMsb0JBQW9CLENBQUNDO0lBQ2hDLE1BQU1DLFFBQWdCLEVBQUU7SUFDeEIsTUFBTUMsUUFBZ0IsRUFBRTtJQUN4QixNQUFNQyxTQUFvQyxDQUFDO0lBRTNDLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSixVQUFVSSxJQUFLO1FBQ2pDLE1BQU1DLFFBQVFDLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLLEtBQUssR0FBRyxnREFBZ0Q7UUFDakcsTUFBTUMsUUFBUVgsTUFBTSxDQUFDTyxRQUFRUCxPQUFPWSxNQUFNLENBQUM7UUFDM0MsTUFBTUMsT0FBYTtZQUFFQyxJQUFJLEdBQVMsT0FBTlIsSUFBSTtZQUFLQztZQUFPSTtRQUFNO1FBRWxELElBQUksQ0FBQ04sTUFBTSxDQUFDRSxNQUFNLEVBQUU7WUFDbEJGLE1BQU0sQ0FBQ0UsTUFBTSxHQUFHLEVBQUU7UUFDcEI7UUFDQUYsTUFBTSxDQUFDRSxNQUFNLENBQUNRLElBQUksQ0FBQ0Y7UUFDbkJWLE1BQU1ZLElBQUksQ0FBQ0Y7SUFDYjtJQUVBRyxPQUFPQyxNQUFNLENBQUNaLFFBQVFhLE9BQU8sQ0FBQyxDQUFDQyxZQUFZQztRQUN6Q0QsV0FBV0QsT0FBTyxDQUFDLENBQUNMLE1BQU1RO1lBQ3hCLElBQUlBLFFBQVEsR0FBRztnQkFDYixNQUFNQyxjQUFjZCxLQUFLZSxLQUFLLENBQUNmLEtBQUtFLE1BQU0sS0FBTVcsQ0FBQUEsUUFBUTtnQkFDeERqQixNQUFNVyxJQUFJLENBQUM7b0JBQ1RTLFFBQVFMLFVBQVUsQ0FBQyxFQUFFLENBQUNMLEVBQUU7b0JBQ3hCVyxRQUFRWixLQUFLQyxFQUFFO2dCQUNqQjtZQUNGO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFBRVg7UUFBT0M7SUFBTTtBQUN4QixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvdGVzdC9nZW5lcmF0ZURhdGEudHM/NTdlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgTm9kZSB7XG4gIGlkOiBzdHJpbmc7XG4gIGdyb3VwOiBudW1iZXI7XG4gIGNvbG9yOiBzdHJpbmc7XG4gIHg6IG51bWJlcjtcbiAgeTogbnVtYmVyO1xufVxuXG5pbnRlcmZhY2UgTGluayB7XG4gIGlkOiBzdHJpbmc7XG4gIHNvdXJjZTogc3RyaW5nO1xuICB0YXJnZXQ6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIEdyYXBoRGF0YSB7XG4gIG5vZGVzOiBOb2RlW107XG4gIGxpbmtzOiBMaW5rW107XG59XG5cbmNvbnN0IGNvbG9ycyA9IFsncmVkJywgJ2dyZWVuJywgJ2JsdWUnLCAneWVsbG93JywgJ3B1cnBsZScsICdvcmFuZ2UnXTtcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlR3JhcGhEYXRhID0gKG51bU5vZGVzOiBudW1iZXIpOiBHcmFwaERhdGEgPT4ge1xuICBjb25zdCBub2RlczogTm9kZVtdID0gW107XG4gIGNvbnN0IGxpbmtzOiBMaW5rW10gPSBbXTtcbiAgY29uc3QgZ3JvdXBzOiB7IFtrZXk6IG51bWJlcl06IE5vZGVbXSB9ID0ge307XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1Ob2RlczsgaSsrKSB7XG4gICAgY29uc3QgZ3JvdXAgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1KSArIDE7IC8vIE7Dum1lcm8gZGUgZ3J1cG9zIChhanVzdGUgY29uZm9ybWUgbmVjZXNzw6FyaW8pXG4gICAgY29uc3QgY29sb3IgPSBjb2xvcnNbZ3JvdXAgJSBjb2xvcnMubGVuZ3RoXTtcbiAgICBjb25zdCBub2RlOiBOb2RlID0geyBpZDogYCR7aSArIDF9YCwgZ3JvdXAsIGNvbG9yIH07XG5cbiAgICBpZiAoIWdyb3Vwc1tncm91cF0pIHtcbiAgICAgIGdyb3Vwc1tncm91cF0gPSBbXTtcbiAgICB9XG4gICAgZ3JvdXBzW2dyb3VwXS5wdXNoKG5vZGUpO1xuICAgIG5vZGVzLnB1c2gobm9kZSk7XG4gIH1cblxuICBPYmplY3QudmFsdWVzKGdyb3VwcykuZm9yRWFjaCgoZ3JvdXBOb2RlcywgZ3JvdXBJbmRleCkgPT4ge1xuICAgIGdyb3VwTm9kZXMuZm9yRWFjaCgobm9kZSwgaW5kZXgpID0+IHtcbiAgICAgIGlmIChpbmRleCA+IDApIHtcbiAgICAgICAgY29uc3QgdGFyZ2V0SW5kZXggPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAoaW5kZXggLSAxKSk7XG4gICAgICAgIGxpbmtzLnB1c2goe1xuICAgICAgICAgIHNvdXJjZTogZ3JvdXBOb2Rlc1swXS5pZCxcbiAgICAgICAgICB0YXJnZXQ6IG5vZGUuaWQsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcblxuICByZXR1cm4geyBub2RlcywgbGlua3MgfTtcbn07XG4iXSwibmFtZXMiOlsiY29sb3JzIiwiZ2VuZXJhdGVHcmFwaERhdGEiLCJudW1Ob2RlcyIsIm5vZGVzIiwibGlua3MiLCJncm91cHMiLCJpIiwiZ3JvdXAiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJjb2xvciIsImxlbmd0aCIsIm5vZGUiLCJpZCIsInB1c2giLCJPYmplY3QiLCJ2YWx1ZXMiLCJmb3JFYWNoIiwiZ3JvdXBOb2RlcyIsImdyb3VwSW5kZXgiLCJpbmRleCIsInRhcmdldEluZGV4Iiwicm91bmQiLCJzb3VyY2UiLCJ0YXJnZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/test/generateData.ts\n"));

/***/ })

});