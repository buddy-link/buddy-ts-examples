"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/test/page",{

/***/ "(app-pages-browser)/./src/app/test/generateData.ts":
/*!**************************************!*\
  !*** ./src/app/test/generateData.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateGraphData: function() { return /* binding */ generateGraphData; }\n/* harmony export */ });\nconst colors = [\n    \"red\",\n    \"green\",\n    \"blue\",\n    \"yellow\",\n    \"purple\",\n    \"orange\"\n];\nconst generateGraphData = (numNodes)=>{\n    const nodes = [];\n    const links = [];\n    const groups = {};\n    for(let i = 0; i < numNodes; i++){\n        const group = Math.floor(Math.random() * colors.length);\n        const color = colors[group];\n        const node = {\n            id: \"\".concat(i + 1),\n            group,\n            color,\n            collapsed: true,\n            childLinks: []\n        };\n        if (!groups[group]) {\n            groups[group] = [];\n        }\n        groups[group].push(node);\n        nodes.push(node);\n    }\n    Object.values(groups).forEach((groupNodes)=>{\n        groupNodes.forEach((node, index)=>{\n            if (index > 0) {\n                links.push({\n                    id: \"\".concat(groupNodes[0].id, \"-\").concat(node.id),\n                    source: groupNodes[0].id,\n                    target: node.id\n                });\n                groupNodes[0].childLinks.push({\n                    id: \"\".concat(groupNodes[0].id, \"-\").concat(node.id),\n                    source: groupNodes[0].id,\n                    target: node.id\n                });\n            }\n        });\n    });\n    return {\n        nodes,\n        links\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvdGVzdC9nZW5lcmF0ZURhdGEudHMiLCJtYXBwaW5ncyI6Ijs7OztBQXFCQSxNQUFNQSxTQUFTO0lBQUM7SUFBTztJQUFTO0lBQVE7SUFBVTtJQUFVO0NBQVM7QUFFOUQsTUFBTUMsb0JBQW9CLENBQUNDO0lBQ2hDLE1BQU1DLFFBQWdCLEVBQUU7SUFDeEIsTUFBTUMsUUFBZ0IsRUFBRTtJQUN4QixNQUFNQyxTQUFvQyxDQUFDO0lBRTNDLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSixVQUFVSSxJQUFLO1FBQ2pDLE1BQU1DLFFBQVFDLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLVixPQUFPVyxNQUFNO1FBQ3RELE1BQU1DLFFBQVFaLE1BQU0sQ0FBQ08sTUFBTTtRQUMzQixNQUFNTSxPQUFhO1lBQUVDLElBQUksR0FBUyxPQUFOUixJQUFJO1lBQUtDO1lBQU9LO1lBQU9HLFdBQVc7WUFBTUMsWUFBWSxFQUFFO1FBQUM7UUFFbkYsSUFBSSxDQUFDWCxNQUFNLENBQUNFLE1BQU0sRUFBRTtZQUNsQkYsTUFBTSxDQUFDRSxNQUFNLEdBQUcsRUFBRTtRQUNwQjtRQUNBRixNQUFNLENBQUNFLE1BQU0sQ0FBQ1UsSUFBSSxDQUFDSjtRQUNuQlYsTUFBTWMsSUFBSSxDQUFDSjtJQUNiO0lBRUFLLE9BQU9DLE1BQU0sQ0FBQ2QsUUFBUWUsT0FBTyxDQUFDLENBQUNDO1FBQzdCQSxXQUFXRCxPQUFPLENBQUMsQ0FBQ1AsTUFBTVM7WUFDeEIsSUFBSUEsUUFBUSxHQUFHO2dCQUNibEIsTUFBTWEsSUFBSSxDQUFDO29CQUNUSCxJQUFJLEdBQXVCRCxPQUFwQlEsVUFBVSxDQUFDLEVBQUUsQ0FBQ1AsRUFBRSxFQUFDLEtBQVcsT0FBUkQsS0FBS0MsRUFBRTtvQkFDbENTLFFBQVFGLFVBQVUsQ0FBQyxFQUFFLENBQUNQLEVBQUU7b0JBQ3hCVSxRQUFRWCxLQUFLQyxFQUFFO2dCQUNqQjtnQkFDQU8sVUFBVSxDQUFDLEVBQUUsQ0FBQ0wsVUFBVSxDQUFFQyxJQUFJLENBQUM7b0JBQzdCSCxJQUFJLEdBQXVCRCxPQUFwQlEsVUFBVSxDQUFDLEVBQUUsQ0FBQ1AsRUFBRSxFQUFDLEtBQVcsT0FBUkQsS0FBS0MsRUFBRTtvQkFDbENTLFFBQVFGLFVBQVUsQ0FBQyxFQUFFLENBQUNQLEVBQUU7b0JBQ3hCVSxRQUFRWCxLQUFLQyxFQUFFO2dCQUNqQjtZQUNGO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFBRVg7UUFBT0M7SUFBTTtBQUN4QixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvdGVzdC9nZW5lcmF0ZURhdGEudHM/NTdlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgTm9kZSB7XG4gIGlkOiBzdHJpbmc7XG4gIGdyb3VwOiBudW1iZXI7XG4gIGNvbG9yOiBzdHJpbmc7XG4gIHg/OiBudW1iZXI7XG4gIHk/OiBudW1iZXI7XG4gIGNvbGxhcHNlZD86IGJvb2xlYW47XG4gIGNoaWxkTGlua3M/OiBMaW5rW107XG59XG5cbmludGVyZmFjZSBMaW5rIHtcbiAgaWQ6IHN0cmluZztcbiAgc291cmNlOiBzdHJpbmc7XG4gIHRhcmdldDogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgR3JhcGhEYXRhIHtcbiAgbm9kZXM6IE5vZGVbXTtcbiAgbGlua3M6IExpbmtbXTtcbn1cblxuY29uc3QgY29sb3JzID0gWydyZWQnLCAnZ3JlZW4nLCAnYmx1ZScsICd5ZWxsb3cnLCAncHVycGxlJywgJ29yYW5nZSddO1xuXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVHcmFwaERhdGEgPSAobnVtTm9kZXM6IG51bWJlcik6IEdyYXBoRGF0YSA9PiB7XG4gIGNvbnN0IG5vZGVzOiBOb2RlW10gPSBbXTtcbiAgY29uc3QgbGlua3M6IExpbmtbXSA9IFtdO1xuICBjb25zdCBncm91cHM6IHsgW2tleTogbnVtYmVyXTogTm9kZVtdIH0gPSB7fTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IG51bU5vZGVzOyBpKyspIHtcbiAgICBjb25zdCBncm91cCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNvbG9ycy5sZW5ndGgpO1xuICAgIGNvbnN0IGNvbG9yID0gY29sb3JzW2dyb3VwXTtcbiAgICBjb25zdCBub2RlOiBOb2RlID0geyBpZDogYCR7aSArIDF9YCwgZ3JvdXAsIGNvbG9yLCBjb2xsYXBzZWQ6IHRydWUsIGNoaWxkTGlua3M6IFtdIH07XG5cbiAgICBpZiAoIWdyb3Vwc1tncm91cF0pIHtcbiAgICAgIGdyb3Vwc1tncm91cF0gPSBbXTtcbiAgICB9XG4gICAgZ3JvdXBzW2dyb3VwXS5wdXNoKG5vZGUpO1xuICAgIG5vZGVzLnB1c2gobm9kZSk7XG4gIH1cblxuICBPYmplY3QudmFsdWVzKGdyb3VwcykuZm9yRWFjaCgoZ3JvdXBOb2RlcykgPT4ge1xuICAgIGdyb3VwTm9kZXMuZm9yRWFjaCgobm9kZSwgaW5kZXgpID0+IHtcbiAgICAgIGlmIChpbmRleCA+IDApIHtcbiAgICAgICAgbGlua3MucHVzaCh7XG4gICAgICAgICAgaWQ6IGAke2dyb3VwTm9kZXNbMF0uaWR9LSR7bm9kZS5pZH1gLFxuICAgICAgICAgIHNvdXJjZTogZ3JvdXBOb2Rlc1swXS5pZCxcbiAgICAgICAgICB0YXJnZXQ6IG5vZGUuaWQsXG4gICAgICAgIH0pO1xuICAgICAgICBncm91cE5vZGVzWzBdLmNoaWxkTGlua3MhLnB1c2goe1xuICAgICAgICAgIGlkOiBgJHtncm91cE5vZGVzWzBdLmlkfS0ke25vZGUuaWR9YCxcbiAgICAgICAgICBzb3VyY2U6IGdyb3VwTm9kZXNbMF0uaWQsXG4gICAgICAgICAgdGFyZ2V0OiBub2RlLmlkLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG5cbiAgcmV0dXJuIHsgbm9kZXMsIGxpbmtzIH07XG59O1xuIl0sIm5hbWVzIjpbImNvbG9ycyIsImdlbmVyYXRlR3JhcGhEYXRhIiwibnVtTm9kZXMiLCJub2RlcyIsImxpbmtzIiwiZ3JvdXBzIiwiaSIsImdyb3VwIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibGVuZ3RoIiwiY29sb3IiLCJub2RlIiwiaWQiLCJjb2xsYXBzZWQiLCJjaGlsZExpbmtzIiwicHVzaCIsIk9iamVjdCIsInZhbHVlcyIsImZvckVhY2giLCJncm91cE5vZGVzIiwiaW5kZXgiLCJzb3VyY2UiLCJ0YXJnZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/test/generateData.ts\n"));

/***/ })

});