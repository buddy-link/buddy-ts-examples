"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/custom-node-program.ts":
/*!***********************************************!*\
  !*** ./src/components/custom-node-program.ts ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CustomNodeProgram; }\n/* harmony export */ });\n/* harmony import */ var sigma_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sigma/utils */ \"(app-pages-browser)/./node_modules/sigma/utils/dist/sigma-utils.esm.js\");\n/* harmony import */ var _sigma_node_image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sigma/node-image */ \"(app-pages-browser)/./node_modules/@sigma/node-image/dist/sigma-node-image.esm.js\");\n\n\nconst vertexShaderSource = \"\\n  attribute vec2 a_position;\\n  attribute float a_size;\\n  attribute vec3 a_color;\\n\\n  uniform float u_ratio;\\n  uniform float u_scale;\\n  uniform mat3 u_matrix;\\n\\n  varying vec3 v_color;\\n\\n  void main() {\\n    v_color = a_color;\\n    vec2 position = (u_matrix * vec3(a_position, 1)).xy;\\n    gl_Position = vec4(position * u_ratio, 0, 1);\\n    gl_PointSize = a_size * u_ratio * u_scale;\\n  }\\n\";\nconst fragmentShaderSource = \"\\n  precision mediump float;\\n\\n  varying vec3 v_color;\\n  uniform sampler2D u_image;\\n\\n  void main() {\\n    vec2 coords = gl_PointCoord;\\n    vec4 textureColor = texture2D(u_image, coords);\\n    if (textureColor.a < 0.1) discard;\\n    gl_FragColor = textureColor;\\n  }\\n\";\nclass CustomNodeProgram extends _sigma_node_image__WEBPACK_IMPORTED_MODULE_1__.NodeImageProgram {\n    process(data, hidden, offset) {\n        if (hidden) return;\n        const { x, y, size, color } = data;\n        const array = this.array;\n        const i = offset * this.attributes;\n        array[i] = x;\n        array[i + 1] = y;\n        array[i + 2] = size;\n        array[i + 3] = (0,sigma_utils__WEBPACK_IMPORTED_MODULE_0__.floatColor)(color);\n    }\n    render(params) {\n        const gl = this.gl;\n        gl.useProgram(this.program);\n        gl.uniform1f(this.uniforms.u_ratio, 1 / Math.sqrt(params.ratio));\n        gl.uniform1f(this.uniforms.u_scale, params.scale);\n        gl.uniformMatrix3fv(this.uniforms.u_matrix, false, params.matrix);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n        gl.vertexAttribPointer(this.attributes.a_position, 2, gl.FLOAT, false, 24, 0);\n        gl.vertexAttribPointer(this.attributes.a_size, 1, gl.FLOAT, false, 24, 8);\n        gl.vertexAttribPointer(this.attributes.a_color, 3, gl.FLOAT, false, 24, 12);\n        gl.enableVertexAttribArray(this.attributes.a_position);\n        gl.enableVertexAttribArray(this.attributes.a_size);\n        gl.enableVertexAttribArray(this.attributes.a_color);\n        if (this.imageLoaded && this.texture) {\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, this.texture);\n            gl.uniform1i(this.uniforms.u_image, 0);\n        }\n        gl.drawArrays(gl.POINTS, 0, this.nodesCount);\n    }\n    constructor(gl){\n        super(gl, vertexShaderSource, fragmentShaderSource);\n        this.texture = null;\n        this.imageLoaded = false;\n        this.array = new Float32Array([]);\n        this.gl = {\n            canvas: undefined,\n            drawingBufferColorSpace: \"display-p3\",\n            drawingBufferHeight: 0,\n            drawingBufferWidth: 0,\n            activeTexture: function(texture) {\n                throw new Error(\"Function not implemented.\");\n            },\n            attachShader: function(program, shader) {\n                throw new Error(\"Function not implemented.\");\n            },\n            bindAttribLocation: function(program, index, name) {\n                throw new Error(\"Function not implemented.\");\n            },\n            bindBuffer: function(target, buffer) {\n                throw new Error(\"Function not implemented.\");\n            },\n            bindFramebuffer: function(target, framebuffer) {\n                throw new Error(\"Function not implemented.\");\n            },\n            bindRenderbuffer: function(target, renderbuffer) {\n                throw new Error(\"Function not implemented.\");\n            },\n            bindTexture: function(target, texture) {\n                throw new Error(\"Function not implemented.\");\n            },\n            blendColor: function(red, green, blue, alpha) {\n                throw new Error(\"Function not implemented.\");\n            },\n            blendEquation: function(mode) {\n                throw new Error(\"Function not implemented.\");\n            },\n            blendEquationSeparate: function(modeRGB, modeAlpha) {\n                throw new Error(\"Function not implemented.\");\n            },\n            blendFunc: function(sfactor, dfactor) {\n                throw new Error(\"Function not implemented.\");\n            },\n            blendFuncSeparate: function(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n                throw new Error(\"Function not implemented.\");\n            },\n            checkFramebufferStatus: function(target) {\n                throw new Error(\"Function not implemented.\");\n            },\n            clear: function(mask) {\n                throw new Error(\"Function not implemented.\");\n            },\n            clearColor: function(red, green, blue, alpha) {\n                throw new Error(\"Function not implemented.\");\n            },\n            clearDepth: function(depth) {\n                throw new Error(\"Function not implemented.\");\n            },\n            clearStencil: function(s) {\n                throw new Error(\"Function not implemented.\");\n            },\n            colorMask: function(red, green, blue, alpha) {\n                throw new Error(\"Function not implemented.\");\n            },\n            compileShader: function(shader) {\n                throw new Error(\"Function not implemented.\");\n            },\n            copyTexImage2D: function(target, level, internalformat, x, y, width, height, border) {\n                throw new Error(\"Function not implemented.\");\n            },\n            copyTexSubImage2D: function(target, level, xoffset, yoffset, x, y, width, height) {\n                throw new Error(\"Function not implemented.\");\n            },\n            createBuffer: function() {\n                throw new Error(\"Function not implemented.\");\n            },\n            createFramebuffer: function() {\n                throw new Error(\"Function not implemented.\");\n            },\n            createProgram: function() {\n                throw new Error(\"Function not implemented.\");\n            },\n            createRenderbuffer: function() {\n                throw new Error(\"Function not implemented.\");\n            },\n            createShader: function(type) {\n                throw new Error(\"Function not implemented.\");\n            },\n            createTexture: function() {\n                throw new Error(\"Function not implemented.\");\n            },\n            cullFace: function(mode) {\n                throw new Error(\"Function not implemented.\");\n            },\n            deleteBuffer: function(buffer) {\n                throw new Error(\"Function not implemented.\");\n            },\n            deleteFramebuffer: function(framebuffer) {\n                throw new Error(\"Function not implemented.\");\n            },\n            deleteProgram: function(program) {\n                throw new Error(\"Function not implemented.\");\n            },\n            deleteRenderbuffer: function(renderbuffer) {\n                throw new Error(\"Function not implemented.\");\n            },\n            deleteShader: function(shader) {\n                throw new Error(\"Function not implemented.\");\n            },\n            deleteTexture: function(texture) {\n                throw new Error(\"Function not implemented.\");\n            },\n            depthFunc: function(func) {\n                throw new Error(\"Function not implemented.\");\n            },\n            depthMask: function(flag) {\n                throw new Error(\"Function not implemented.\");\n            },\n            depthRange: function(zNear, zFar) {\n                throw new Error(\"Function not implemented.\");\n            },\n            detachShader: function(program, shader) {\n                throw new Error(\"Function not implemented.\");\n            },\n            disable: function(cap) {\n                throw new Error(\"Function not implemented.\");\n            },\n            disableVertexAttribArray: function(index) {\n                throw new Error(\"Function not implemented.\");\n            },\n            drawArrays: function(mode, first, count) {\n                throw new Error(\"Function not implemented.\");\n            },\n            drawElements: function(mode, count, type, offset) {\n                throw new Error(\"Function not implemented.\");\n            },\n            enable: function(cap) {\n                throw new Error(\"Function not implemented.\");\n            },\n            enableVertexAttribArray: function(index) {\n                throw new Error(\"Function not implemented.\");\n            },\n            finish: function() {\n                throw new Error(\"Function not implemented.\");\n            },\n            flush: function() {\n                throw new Error(\"Function not implemented.\");\n            },\n            framebufferRenderbuffer: function(target, attachment, renderbuffertarget, renderbuffer) {\n                throw new Error(\"Function not implemented.\");\n            },\n            framebufferTexture2D: function(target, attachment, textarget, texture, level) {\n                throw new Error(\"Function not implemented.\");\n            },\n            frontFace: function(mode) {\n                throw new Error(\"Function not implemented.\");\n            },\n            generateMipmap: function(target) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getActiveAttrib: function(program, index) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getActiveUniform: function(program, index) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getAttachedShaders: function(program) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getAttribLocation: function(program, name) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getBufferParameter: function(target, pname) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getContextAttributes: function() {\n                throw new Error(\"Function not implemented.\");\n            },\n            getError: function() {\n                throw new Error(\"Function not implemented.\");\n            },\n            getExtension: function(extensionName) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getFramebufferAttachmentParameter: function(target, attachment, pname) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getParameter: function(pname) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getProgramInfoLog: function(program) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getProgramParameter: function(program, pname) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getRenderbufferParameter: function(target, pname) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getShaderInfoLog: function(shader) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getShaderParameter: function(shader, pname) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getShaderPrecisionFormat: function(shadertype, precisiontype) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getShaderSource: function(shader) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getSupportedExtensions: function() {\n                throw new Error(\"Function not implemented.\");\n            },\n            getTexParameter: function(target, pname) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getUniform: function(program, location) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getUniformLocation: function(program, name) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getVertexAttrib: function(index, pname) {\n                throw new Error(\"Function not implemented.\");\n            },\n            getVertexAttribOffset: function(index, pname) {\n                throw new Error(\"Function not implemented.\");\n            },\n            hint: function(target, mode) {\n                throw new Error(\"Function not implemented.\");\n            },\n            isBuffer: function(buffer) {\n                throw new Error(\"Function not implemented.\");\n            },\n            isContextLost: function() {\n                throw new Error(\"Function not implemented.\");\n            },\n            isEnabled: function(cap) {\n                throw new Error(\"Function not implemented.\");\n            },\n            isFramebuffer: function(framebuffer) {\n                throw new Error(\"Function not implemented.\");\n            },\n            isProgram: function(program) {\n                throw new Error(\"Function not implemented.\");\n            },\n            isRenderbuffer: function(renderbuffer) {\n                throw new Error(\"Function not implemented.\");\n            },\n            isShader: function(shader) {\n                throw new Error(\"Function not implemented.\");\n            },\n            isTexture: function(texture) {\n                throw new Error(\"Function not implemented.\");\n            },\n            lineWidth: function(width) {\n                throw new Error(\"Function not implemented.\");\n            },\n            linkProgram: function(program) {\n                throw new Error(\"Function not implemented.\");\n            },\n            pixelStorei: function(pname, param) {\n                throw new Error(\"Function not implemented.\");\n            },\n            polygonOffset: function(factor, units) {\n                throw new Error(\"Function not implemented.\");\n            },\n            renderbufferStorage: function(target, internalformat, width, height) {\n                throw new Error(\"Function not implemented.\");\n            },\n            sampleCoverage: function(value, invert) {\n                throw new Error(\"Function not implemented.\");\n            },\n            scissor: function(x, y, width, height) {\n                throw new Error(\"Function not implemented.\");\n            },\n            shaderSource: function(shader, source) {\n                throw new Error(\"Function not implemented.\");\n            },\n            stencilFunc: function(func, ref, mask) {\n                throw new Error(\"Function not implemented.\");\n            },\n            stencilFuncSeparate: function(face, func, ref, mask) {\n                throw new Error(\"Function not implemented.\");\n            },\n            stencilMask: function(mask) {\n                throw new Error(\"Function not implemented.\");\n            },\n            stencilMaskSeparate: function(face, mask) {\n                throw new Error(\"Function not implemented.\");\n            },\n            stencilOp: function(fail, zfail, zpass) {\n                throw new Error(\"Function not implemented.\");\n            },\n            stencilOpSeparate: function(face, fail, zfail, zpass) {\n                throw new Error(\"Function not implemented.\");\n            },\n            texParameterf: function(target, pname, param) {\n                throw new Error(\"Function not implemented.\");\n            },\n            texParameteri: function(target, pname, param) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform1f: function(location, x) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform1i: function(location, x) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform2f: function(location, x, y) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform2i: function(location, x, y) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform3f: function(location, x, y, z) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform3i: function(location, x, y, z) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform4f: function(location, x, y, z, w) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform4i: function(location, x, y, z, w) {\n                throw new Error(\"Function not implemented.\");\n            },\n            useProgram: function(program) {\n                throw new Error(\"Function not implemented.\");\n            },\n            validateProgram: function(program) {\n                throw new Error(\"Function not implemented.\");\n            },\n            vertexAttrib1f: function(index, x) {\n                throw new Error(\"Function not implemented.\");\n            },\n            vertexAttrib1fv: function(index, values) {\n                throw new Error(\"Function not implemented.\");\n            },\n            vertexAttrib2f: function(index, x, y) {\n                throw new Error(\"Function not implemented.\");\n            },\n            vertexAttrib2fv: function(index, values) {\n                throw new Error(\"Function not implemented.\");\n            },\n            vertexAttrib3f: function(index, x, y, z) {\n                throw new Error(\"Function not implemented.\");\n            },\n            vertexAttrib3fv: function(index, values) {\n                throw new Error(\"Function not implemented.\");\n            },\n            vertexAttrib4f: function(index, x, y, z, w) {\n                throw new Error(\"Function not implemented.\");\n            },\n            vertexAttrib4fv: function(index, values) {\n                throw new Error(\"Function not implemented.\");\n            },\n            vertexAttribPointer: function(index, size, type, normalized, stride, offset) {\n                throw new Error(\"Function not implemented.\");\n            },\n            viewport: function(x, y, width, height) {\n                throw new Error(\"Function not implemented.\");\n            },\n            DEPTH_BUFFER_BIT: 256,\n            STENCIL_BUFFER_BIT: 1024,\n            COLOR_BUFFER_BIT: 16384,\n            POINTS: 0,\n            LINES: 1,\n            LINE_LOOP: 2,\n            LINE_STRIP: 3,\n            TRIANGLES: 4,\n            TRIANGLE_STRIP: 5,\n            TRIANGLE_FAN: 6,\n            ZERO: 0,\n            ONE: 1,\n            SRC_COLOR: 768,\n            ONE_MINUS_SRC_COLOR: 769,\n            SRC_ALPHA: 770,\n            ONE_MINUS_SRC_ALPHA: 771,\n            DST_ALPHA: 772,\n            ONE_MINUS_DST_ALPHA: 773,\n            DST_COLOR: 774,\n            ONE_MINUS_DST_COLOR: 775,\n            SRC_ALPHA_SATURATE: 776,\n            FUNC_ADD: 32774,\n            BLEND_EQUATION: 32777,\n            BLEND_EQUATION_RGB: 32777,\n            BLEND_EQUATION_ALPHA: 34877,\n            FUNC_SUBTRACT: 32778,\n            FUNC_REVERSE_SUBTRACT: 32779,\n            BLEND_DST_RGB: 32968,\n            BLEND_SRC_RGB: 32969,\n            BLEND_DST_ALPHA: 32970,\n            BLEND_SRC_ALPHA: 32971,\n            CONSTANT_COLOR: 32769,\n            ONE_MINUS_CONSTANT_COLOR: 32770,\n            CONSTANT_ALPHA: 32771,\n            ONE_MINUS_CONSTANT_ALPHA: 32772,\n            BLEND_COLOR: 32773,\n            ARRAY_BUFFER: 34962,\n            ELEMENT_ARRAY_BUFFER: 34963,\n            ARRAY_BUFFER_BINDING: 34964,\n            ELEMENT_ARRAY_BUFFER_BINDING: 34965,\n            STREAM_DRAW: 35040,\n            STATIC_DRAW: 35044,\n            DYNAMIC_DRAW: 35048,\n            BUFFER_SIZE: 34660,\n            BUFFER_USAGE: 34661,\n            CURRENT_VERTEX_ATTRIB: 34342,\n            FRONT: 1028,\n            BACK: 1029,\n            FRONT_AND_BACK: 1032,\n            CULL_FACE: 2884,\n            BLEND: 3042,\n            DITHER: 3024,\n            STENCIL_TEST: 2960,\n            DEPTH_TEST: 2929,\n            SCISSOR_TEST: 3089,\n            POLYGON_OFFSET_FILL: 32823,\n            SAMPLE_ALPHA_TO_COVERAGE: 32926,\n            SAMPLE_COVERAGE: 32928,\n            NO_ERROR: 0,\n            INVALID_ENUM: 1280,\n            INVALID_VALUE: 1281,\n            INVALID_OPERATION: 1282,\n            OUT_OF_MEMORY: 1285,\n            CW: 2304,\n            CCW: 2305,\n            LINE_WIDTH: 2849,\n            ALIASED_POINT_SIZE_RANGE: 33901,\n            ALIASED_LINE_WIDTH_RANGE: 33902,\n            CULL_FACE_MODE: 2885,\n            FRONT_FACE: 2886,\n            DEPTH_RANGE: 2928,\n            DEPTH_WRITEMASK: 2930,\n            DEPTH_CLEAR_VALUE: 2931,\n            DEPTH_FUNC: 2932,\n            STENCIL_CLEAR_VALUE: 2961,\n            STENCIL_FUNC: 2962,\n            STENCIL_FAIL: 2964,\n            STENCIL_PASS_DEPTH_FAIL: 2965,\n            STENCIL_PASS_DEPTH_PASS: 2966,\n            STENCIL_REF: 2967,\n            STENCIL_VALUE_MASK: 2963,\n            STENCIL_WRITEMASK: 2968,\n            STENCIL_BACK_FUNC: 34816,\n            STENCIL_BACK_FAIL: 34817,\n            STENCIL_BACK_PASS_DEPTH_FAIL: 34818,\n            STENCIL_BACK_PASS_DEPTH_PASS: 34819,\n            STENCIL_BACK_REF: 36003,\n            STENCIL_BACK_VALUE_MASK: 36004,\n            STENCIL_BACK_WRITEMASK: 36005,\n            VIEWPORT: 2978,\n            SCISSOR_BOX: 3088,\n            COLOR_CLEAR_VALUE: 3106,\n            COLOR_WRITEMASK: 3107,\n            UNPACK_ALIGNMENT: 3317,\n            PACK_ALIGNMENT: 3333,\n            MAX_TEXTURE_SIZE: 3379,\n            MAX_VIEWPORT_DIMS: 3386,\n            SUBPIXEL_BITS: 3408,\n            RED_BITS: 3410,\n            GREEN_BITS: 3411,\n            BLUE_BITS: 3412,\n            ALPHA_BITS: 3413,\n            DEPTH_BITS: 3414,\n            STENCIL_BITS: 3415,\n            POLYGON_OFFSET_UNITS: 10752,\n            POLYGON_OFFSET_FACTOR: 32824,\n            TEXTURE_BINDING_2D: 32873,\n            SAMPLE_BUFFERS: 32936,\n            SAMPLES: 32937,\n            SAMPLE_COVERAGE_VALUE: 32938,\n            SAMPLE_COVERAGE_INVERT: 32939,\n            COMPRESSED_TEXTURE_FORMATS: 34467,\n            DONT_CARE: 4352,\n            FASTEST: 4353,\n            NICEST: 4354,\n            GENERATE_MIPMAP_HINT: 33170,\n            BYTE: 5120,\n            UNSIGNED_BYTE: 5121,\n            SHORT: 5122,\n            UNSIGNED_SHORT: 5123,\n            INT: 5124,\n            UNSIGNED_INT: 5125,\n            FLOAT: 5126,\n            DEPTH_COMPONENT: 6402,\n            ALPHA: 6406,\n            RGB: 6407,\n            RGBA: 6408,\n            LUMINANCE: 6409,\n            LUMINANCE_ALPHA: 6410,\n            UNSIGNED_SHORT_4_4_4_4: 32819,\n            UNSIGNED_SHORT_5_5_5_1: 32820,\n            UNSIGNED_SHORT_5_6_5: 33635,\n            FRAGMENT_SHADER: 35632,\n            VERTEX_SHADER: 35633,\n            MAX_VERTEX_ATTRIBS: 34921,\n            MAX_VERTEX_UNIFORM_VECTORS: 36347,\n            MAX_VARYING_VECTORS: 36348,\n            MAX_COMBINED_TEXTURE_IMAGE_UNITS: 35661,\n            MAX_VERTEX_TEXTURE_IMAGE_UNITS: 35660,\n            MAX_TEXTURE_IMAGE_UNITS: 34930,\n            MAX_FRAGMENT_UNIFORM_VECTORS: 36349,\n            SHADER_TYPE: 35663,\n            DELETE_STATUS: 35712,\n            LINK_STATUS: 35714,\n            VALIDATE_STATUS: 35715,\n            ATTACHED_SHADERS: 35717,\n            ACTIVE_UNIFORMS: 35718,\n            ACTIVE_ATTRIBUTES: 35721,\n            SHADING_LANGUAGE_VERSION: 35724,\n            CURRENT_PROGRAM: 35725,\n            NEVER: 512,\n            LESS: 513,\n            EQUAL: 514,\n            LEQUAL: 515,\n            GREATER: 516,\n            NOTEQUAL: 517,\n            GEQUAL: 518,\n            ALWAYS: 519,\n            KEEP: 7680,\n            REPLACE: 7681,\n            INCR: 7682,\n            DECR: 7683,\n            INVERT: 5386,\n            INCR_WRAP: 34055,\n            DECR_WRAP: 34056,\n            VENDOR: 7936,\n            RENDERER: 7937,\n            VERSION: 7938,\n            NEAREST: 9728,\n            LINEAR: 9729,\n            NEAREST_MIPMAP_NEAREST: 9984,\n            LINEAR_MIPMAP_NEAREST: 9985,\n            NEAREST_MIPMAP_LINEAR: 9986,\n            LINEAR_MIPMAP_LINEAR: 9987,\n            TEXTURE_MAG_FILTER: 10240,\n            TEXTURE_MIN_FILTER: 10241,\n            TEXTURE_WRAP_S: 10242,\n            TEXTURE_WRAP_T: 10243,\n            TEXTURE_2D: 3553,\n            TEXTURE: 5890,\n            TEXTURE_CUBE_MAP: 34067,\n            TEXTURE_BINDING_CUBE_MAP: 34068,\n            TEXTURE_CUBE_MAP_POSITIVE_X: 34069,\n            TEXTURE_CUBE_MAP_NEGATIVE_X: 34070,\n            TEXTURE_CUBE_MAP_POSITIVE_Y: 34071,\n            TEXTURE_CUBE_MAP_NEGATIVE_Y: 34072,\n            TEXTURE_CUBE_MAP_POSITIVE_Z: 34073,\n            TEXTURE_CUBE_MAP_NEGATIVE_Z: 34074,\n            MAX_CUBE_MAP_TEXTURE_SIZE: 34076,\n            TEXTURE0: 33984,\n            TEXTURE1: 33985,\n            TEXTURE2: 33986,\n            TEXTURE3: 33987,\n            TEXTURE4: 33988,\n            TEXTURE5: 33989,\n            TEXTURE6: 33990,\n            TEXTURE7: 33991,\n            TEXTURE8: 33992,\n            TEXTURE9: 33993,\n            TEXTURE10: 33994,\n            TEXTURE11: 33995,\n            TEXTURE12: 33996,\n            TEXTURE13: 33997,\n            TEXTURE14: 33998,\n            TEXTURE15: 33999,\n            TEXTURE16: 34000,\n            TEXTURE17: 34001,\n            TEXTURE18: 34002,\n            TEXTURE19: 34003,\n            TEXTURE20: 34004,\n            TEXTURE21: 34005,\n            TEXTURE22: 34006,\n            TEXTURE23: 34007,\n            TEXTURE24: 34008,\n            TEXTURE25: 34009,\n            TEXTURE26: 34010,\n            TEXTURE27: 34011,\n            TEXTURE28: 34012,\n            TEXTURE29: 34013,\n            TEXTURE30: 34014,\n            TEXTURE31: 34015,\n            ACTIVE_TEXTURE: 34016,\n            REPEAT: 10497,\n            CLAMP_TO_EDGE: 33071,\n            MIRRORED_REPEAT: 33648,\n            FLOAT_VEC2: 35664,\n            FLOAT_VEC3: 35665,\n            FLOAT_VEC4: 35666,\n            INT_VEC2: 35667,\n            INT_VEC3: 35668,\n            INT_VEC4: 35669,\n            BOOL: 35670,\n            BOOL_VEC2: 35671,\n            BOOL_VEC3: 35672,\n            BOOL_VEC4: 35673,\n            FLOAT_MAT2: 35674,\n            FLOAT_MAT3: 35675,\n            FLOAT_MAT4: 35676,\n            SAMPLER_2D: 35678,\n            SAMPLER_CUBE: 35680,\n            VERTEX_ATTRIB_ARRAY_ENABLED: 34338,\n            VERTEX_ATTRIB_ARRAY_SIZE: 34339,\n            VERTEX_ATTRIB_ARRAY_STRIDE: 34340,\n            VERTEX_ATTRIB_ARRAY_TYPE: 34341,\n            VERTEX_ATTRIB_ARRAY_NORMALIZED: 34922,\n            VERTEX_ATTRIB_ARRAY_POINTER: 34373,\n            VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 34975,\n            IMPLEMENTATION_COLOR_READ_TYPE: 35738,\n            IMPLEMENTATION_COLOR_READ_FORMAT: 35739,\n            COMPILE_STATUS: 35713,\n            LOW_FLOAT: 36336,\n            MEDIUM_FLOAT: 36337,\n            HIGH_FLOAT: 36338,\n            LOW_INT: 36339,\n            MEDIUM_INT: 36340,\n            HIGH_INT: 36341,\n            FRAMEBUFFER: 36160,\n            RENDERBUFFER: 36161,\n            RGBA4: 32854,\n            RGB5_A1: 32855,\n            RGBA8: 32856,\n            RGB565: 36194,\n            DEPTH_COMPONENT16: 33189,\n            STENCIL_INDEX8: 36168,\n            DEPTH_STENCIL: 34041,\n            RENDERBUFFER_WIDTH: 36162,\n            RENDERBUFFER_HEIGHT: 36163,\n            RENDERBUFFER_INTERNAL_FORMAT: 36164,\n            RENDERBUFFER_RED_SIZE: 36176,\n            RENDERBUFFER_GREEN_SIZE: 36177,\n            RENDERBUFFER_BLUE_SIZE: 36178,\n            RENDERBUFFER_ALPHA_SIZE: 36179,\n            RENDERBUFFER_DEPTH_SIZE: 36180,\n            RENDERBUFFER_STENCIL_SIZE: 36181,\n            FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 36048,\n            FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 36049,\n            FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 36050,\n            FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 36051,\n            COLOR_ATTACHMENT0: 36064,\n            DEPTH_ATTACHMENT: 36096,\n            STENCIL_ATTACHMENT: 36128,\n            DEPTH_STENCIL_ATTACHMENT: 33306,\n            NONE: 0,\n            FRAMEBUFFER_COMPLETE: 36053,\n            FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 36054,\n            FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 36055,\n            FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 36057,\n            FRAMEBUFFER_UNSUPPORTED: 36061,\n            FRAMEBUFFER_BINDING: 36006,\n            RENDERBUFFER_BINDING: 36007,\n            MAX_RENDERBUFFER_SIZE: 34024,\n            INVALID_FRAMEBUFFER_OPERATION: 1286,\n            UNPACK_FLIP_Y_WEBGL: 37440,\n            UNPACK_PREMULTIPLY_ALPHA_WEBGL: 37441,\n            CONTEXT_LOST_WEBGL: 37442,\n            UNPACK_COLORSPACE_CONVERSION_WEBGL: 37443,\n            BROWSER_DEFAULT_WEBGL: 37444,\n            bufferData: function(target, size, usage) {\n                throw new Error(\"Function not implemented.\");\n            },\n            bufferSubData: function(target, offset, data) {\n                throw new Error(\"Function not implemented.\");\n            },\n            compressedTexImage2D: function(target, level, internalformat, width, height, border, data) {\n                throw new Error(\"Function not implemented.\");\n            },\n            compressedTexSubImage2D: function(target, level, xoffset, yoffset, width, height, format, data) {\n                throw new Error(\"Function not implemented.\");\n            },\n            readPixels: function(x, y, width, height, format, type, pixels) {\n                throw new Error(\"Function not implemented.\");\n            },\n            texImage2D: function(target, level, internalformat, width, height, border, format, type, pixels) {\n                throw new Error(\"Function not implemented.\");\n            },\n            texSubImage2D: function(target, level, xoffset, yoffset, width, height, format, type, pixels) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform1fv: function(location, v) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform1iv: function(location, v) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform2fv: function(location, v) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform2iv: function(location, v) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform3fv: function(location, v) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform3iv: function(location, v) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform4fv: function(location, v) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniform4iv: function(location, v) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniformMatrix2fv: function(location, transpose, value) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniformMatrix3fv: function(location, transpose, value) {\n                throw new Error(\"Function not implemented.\");\n            },\n            uniformMatrix4fv: function(location, transpose, value) {\n                throw new Error(\"Function not implemented.\");\n            }\n        } // Initialize the gl property\n        ;\n        const image = new Image();\n        image.src = \"/logo.webp\";\n        image.onload = ()=>{\n            this.texture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this.texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            this.imageLoaded = true;\n        };\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/custom-node-program.ts\n"));

/***/ })

});