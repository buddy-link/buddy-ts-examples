"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/kapsule";
exports.ids = ["vendor-chunks/kapsule"];
exports.modules = {

/***/ "(ssr)/./node_modules/kapsule/dist/kapsule.mjs":
/*!***********************************************!*\
  !*** ./node_modules/kapsule/dist/kapsule.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ index)\n/* harmony export */ });\n/* harmony import */ var lodash_es_debounce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash-es/debounce.js */ \"(ssr)/./node_modules/lodash-es/debounce.js\");\n\n\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar Prop = /*#__PURE__*/_createClass(function Prop(name, _ref) {\n  var _ref$default = _ref[\"default\"],\n    defaultVal = _ref$default === void 0 ? null : _ref$default,\n    _ref$triggerUpdate = _ref.triggerUpdate,\n    triggerUpdate = _ref$triggerUpdate === void 0 ? true : _ref$triggerUpdate,\n    _ref$onChange = _ref.onChange,\n    onChange = _ref$onChange === void 0 ? function (newVal, state) {} : _ref$onChange;\n  _classCallCheck(this, Prop);\n  this.name = name;\n  this.defaultVal = defaultVal;\n  this.triggerUpdate = triggerUpdate;\n  this.onChange = onChange;\n});\nfunction index (_ref2) {\n  var _ref2$stateInit = _ref2.stateInit,\n    stateInit = _ref2$stateInit === void 0 ? function () {\n      return {};\n    } : _ref2$stateInit,\n    _ref2$props = _ref2.props,\n    rawProps = _ref2$props === void 0 ? {} : _ref2$props,\n    _ref2$methods = _ref2.methods,\n    methods = _ref2$methods === void 0 ? {} : _ref2$methods,\n    _ref2$aliases = _ref2.aliases,\n    aliases = _ref2$aliases === void 0 ? {} : _ref2$aliases,\n    _ref2$init = _ref2.init,\n    initFn = _ref2$init === void 0 ? function () {} : _ref2$init,\n    _ref2$update = _ref2.update,\n    updateFn = _ref2$update === void 0 ? function () {} : _ref2$update;\n  // Parse props into Prop instances\n  var props = Object.keys(rawProps).map(function (propName) {\n    return new Prop(propName, rawProps[propName]);\n  });\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Holds component state\n    var state = Object.assign({}, stateInit instanceof Function ? stateInit(options) : stateInit,\n    // Support plain objects for backwards compatibility\n    {\n      initialised: false\n    });\n\n    // keeps track of which props triggered an update\n    var changedProps = {};\n\n    // Component constructor\n    function comp(nodeElement) {\n      initStatic(nodeElement, options);\n      digest();\n      return comp;\n    }\n    var initStatic = function initStatic(nodeElement, options) {\n      initFn.call(comp, nodeElement, state, options);\n      state.initialised = true;\n    };\n    var digest = (0,lodash_es_debounce_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function () {\n      if (!state.initialised) {\n        return;\n      }\n      updateFn.call(comp, state, changedProps);\n      changedProps = {};\n    }, 1);\n\n    // Getter/setter methods\n    props.forEach(function (prop) {\n      comp[prop.name] = getSetProp(prop);\n      function getSetProp(_ref3) {\n        var prop = _ref3.name,\n          _ref3$triggerUpdate = _ref3.triggerUpdate,\n          redigest = _ref3$triggerUpdate === void 0 ? false : _ref3$triggerUpdate,\n          _ref3$onChange = _ref3.onChange,\n          onChange = _ref3$onChange === void 0 ? function (newVal, state) {} : _ref3$onChange,\n          _ref3$defaultVal = _ref3.defaultVal,\n          defaultVal = _ref3$defaultVal === void 0 ? null : _ref3$defaultVal;\n        return function (_) {\n          var curVal = state[prop];\n          if (!arguments.length) {\n            return curVal;\n          } // Getter mode\n\n          var val = _ === undefined ? defaultVal : _; // pick default if value passed is undefined\n          state[prop] = val;\n          onChange.call(comp, val, state, curVal);\n\n          // track changed props\n          !changedProps.hasOwnProperty(prop) && (changedProps[prop] = curVal);\n          if (redigest) {\n            digest();\n          }\n          return comp;\n        };\n      }\n    });\n\n    // Other methods\n    Object.keys(methods).forEach(function (methodName) {\n      comp[methodName] = function () {\n        var _methods$methodName;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return (_methods$methodName = methods[methodName]).call.apply(_methods$methodName, [comp, state].concat(args));\n      };\n    });\n\n    // Link aliases\n    Object.entries(aliases).forEach(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n        alias = _ref5[0],\n        target = _ref5[1];\n      return comp[alias] = comp[target];\n    });\n\n    // Reset all component props to their default value\n    comp.resetProps = function () {\n      props.forEach(function (prop) {\n        comp[prop.name](prop.defaultVal);\n      });\n      return comp;\n    };\n\n    //\n\n    comp.resetProps(); // Apply all prop defaults\n    state._rerender = digest; // Expose digest method\n\n    return comp;\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/kapsule/dist/kapsule.mjs\n");

/***/ })

};
;