"use strict";exports.id=88,exports.ids=[88],exports.modules={91088:(e,t,s)=>{s.d(t,{GetRoleCredentialsCommand:()=>z,SSOClient:()=>eT});var n=s(38085),o=s(65030),r=s(3306);let i=e=>({...e,useDualstackEndpoint:e.useDualstackEndpoint??!1,useFipsEndpoint:e.useFipsEndpoint??!1,defaultSigningName:"awsssoportal"}),a={UseFIPS:{type:"builtInParams",name:"useFipsEndpoint"},Endpoint:{type:"builtInParams",name:"endpoint"},Region:{type:"builtInParams",name:"region"},UseDualStack:{type:"builtInParams",name:"useDualstackEndpoint"}};class d extends r.ServiceException{constructor(e){super(e),Object.setPrototypeOf(this,d.prototype)}}class c extends d{constructor(e){super({name:"InvalidRequestException",$fault:"client",...e}),this.name="InvalidRequestException",this.$fault="client",Object.setPrototypeOf(this,c.prototype)}}class u extends d{constructor(e){super({name:"ResourceNotFoundException",$fault:"client",...e}),this.name="ResourceNotFoundException",this.$fault="client",Object.setPrototypeOf(this,u.prototype)}}class p extends d{constructor(e){super({name:"TooManyRequestsException",$fault:"client",...e}),this.name="TooManyRequestsException",this.$fault="client",Object.setPrototypeOf(this,p.prototype)}}class l extends d{constructor(e){super({name:"UnauthorizedException",$fault:"client",...e}),this.name="UnauthorizedException",this.$fault="client",Object.setPrototypeOf(this,l.prototype)}}let h=e=>({...e,...e.accessToken&&{accessToken:r.SENSITIVE_STRING}}),m=e=>({...e,...e.secretAccessKey&&{secretAccessKey:r.SENSITIVE_STRING},...e.sessionToken&&{sessionToken:r.SENSITIVE_STRING}}),g=e=>({...e,...e.roleCredentials&&{roleCredentials:m(e.roleCredentials)}});var f=s(60881),y=s(38791);let S=async(e,t)=>{let s;let n=(0,y.requestBuilder)(e,t),o=(0,r.map)({},C,{[q]:e[A]});n.bp("/federation/credentials");let i=(0,r.map)({[O]:[,(0,r.expectNonNull)(e[N],"roleName")],[D]:[,(0,r.expectNonNull)(e[R],"accountId")]});return n.m("GET").h(o).q(i).b(s),n.build()},x=async(e,t)=>{if(200!==e.statusCode&&e.statusCode>=300)return P(e,t);let s=(0,r.map)({$metadata:k(e)}),n=(0,r.expectNonNull)((0,r.expectObject)(await (0,f.parseJsonBody)(e.body,t)),"body");return Object.assign(s,(0,r.take)(n,{roleCredentials:r._json})),s},P=async(e,t)=>{let s={...e,body:await (0,f.parseJsonErrorBody)(e.body,t)},n=(0,f.loadRestJsonErrorCode)(e,s.body);switch(n){case"InvalidRequestException":case"com.amazonaws.sso#InvalidRequestException":throw await b(s,t);case"ResourceNotFoundException":case"com.amazonaws.sso#ResourceNotFoundException":throw await E(s,t);case"TooManyRequestsException":case"com.amazonaws.sso#TooManyRequestsException":throw await I(s,t);case"UnauthorizedException":case"com.amazonaws.sso#UnauthorizedException":throw await w(s,t);default:return v({output:e,parsedBody:s.body,errorCode:n})}},v=(0,r.withBaseException)(d),b=async(e,t)=>{let s=(0,r.map)({}),n=e.body;Object.assign(s,(0,r.take)(n,{message:r.expectString}));let o=new c({$metadata:k(e),...s});return(0,r.decorateServiceException)(o,e.body)},E=async(e,t)=>{let s=(0,r.map)({}),n=e.body;Object.assign(s,(0,r.take)(n,{message:r.expectString}));let o=new u({$metadata:k(e),...s});return(0,r.decorateServiceException)(o,e.body)},I=async(e,t)=>{let s=(0,r.map)({}),n=e.body;Object.assign(s,(0,r.take)(n,{message:r.expectString}));let o=new p({$metadata:k(e),...s});return(0,r.decorateServiceException)(o,e.body)},w=async(e,t)=>{let s=(0,r.map)({}),n=e.body;Object.assign(s,(0,r.take)(n,{message:r.expectString}));let o=new l({$metadata:k(e),...s});return(0,r.decorateServiceException)(o,e.body)},k=e=>({httpStatusCode:e.statusCode,requestId:e.headers["x-amzn-requestid"]??e.headers["x-amzn-request-id"]??e.headers["x-amz-request-id"],extendedRequestId:e.headers["x-amz-id-2"],cfId:e.headers["x-amz-cf-id"]}),C=e=>null!=e&&""!==e&&(!Object.getOwnPropertyNames(e).includes("length")||0!=e.length)&&(!Object.getOwnPropertyNames(e).includes("size")||0!=e.size),R="accountId",A="accessToken",D="account_id",N="roleName",O="role_name",q="x-amz-sso_bearer_token";class z extends r.Command.classBuilder().ep({...a}).m(function(e,t,s,r){return[(0,o.p2)(s,this.serialize,this.deserialize),(0,n.a3)(s,e.getEndpointParameterInstructions())]}).s("SWBPortalService","GetRoleCredentials",{}).n("SSOClient","GetRoleCredentialsCommand").f(h,g).ser(S).de(x).build(){}var F=s(50553),T=s(52031),j=s(46288),H=s(20197),$=s(8086),G=s(45808),M=s(72765),U=s(82264);let V=async(e,t,s)=>({operation:(0,U.J)(t).operation,region:await (0,U.$)(e.region)()||(()=>{throw Error("expected `region` to be configured for `aws.auth#sigv4`")})()}),B=e=>{let t=[];switch(e.operation){case"GetRoleCredentials":case"ListAccountRoles":case"ListAccounts":case"Logout":t.push({schemeId:"smithy.api#noAuth"});break;default:t.push({schemeId:"aws.auth#sigv4",signingProperties:{name:"awsssoportal",region:e.region},propertiesExtractor:(e,t)=>({signingProperties:{config:e,context:t}})})}return t},_=e=>({...(0,f.resolveAwsSdkSigV4Config)(e)}),L={i8:"3.583.0"};var W=s(20731),J=s(61385),K=s(45272),X=s(95580),Q=s(87093),Y=s(72667),Z=s(43611),ee=s(99206),et=s(68667),es=s(54833),en=s(26056);let eo="required",er="argv",ei="isSet",ea="booleanEquals",ed="error",ec="endpoint",eu="tree",ep="PartitionResult",el="getAttr",eh={[eo]:!1,type:"String"},em={[eo]:!0,default:!1,type:"Boolean"},eg={ref:"Endpoint"},ef={fn:ea,[er]:[{ref:"UseFIPS"},!0]},ey={fn:ea,[er]:[{ref:"UseDualStack"},!0]},eS={},ex={fn:el,[er]:[{ref:ep},"supportsFIPS"]},eP={ref:ep},ev={fn:ea,[er]:[!0,{fn:el,[er]:[eP,"supportsDualStack"]}]},eb=[ef],eE=[ey],eI=[{ref:"Region"}],ew={version:"1.0",parameters:{Region:eh,UseDualStack:em,UseFIPS:em,Endpoint:eh},rules:[{conditions:[{fn:ei,[er]:[eg]}],rules:[{conditions:eb,error:"Invalid Configuration: FIPS and custom endpoint are not supported",type:ed},{conditions:eE,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",type:ed},{endpoint:{url:eg,properties:eS,headers:eS},type:ec}],type:eu},{conditions:[{fn:ei,[er]:eI}],rules:[{conditions:[{fn:"aws.partition",[er]:eI,assign:ep}],rules:[{conditions:[ef,ey],rules:[{conditions:[{fn:ea,[er]:[!0,ex]},ev],rules:[{endpoint:{url:"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:eS,headers:eS},type:ec}],type:eu},{error:"FIPS and DualStack are enabled, but this partition does not support one or both",type:ed}],type:eu},{conditions:eb,rules:[{conditions:[{fn:ea,[er]:[ex,!0]}],rules:[{conditions:[{fn:"stringEquals",[er]:[{fn:el,[er]:[eP,"name"]},"aws-us-gov"]}],endpoint:{url:"https://portal.sso.{Region}.amazonaws.com",properties:eS,headers:eS},type:ec},{endpoint:{url:"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}",properties:eS,headers:eS},type:ec}],type:eu},{error:"FIPS is enabled but this partition does not support FIPS",type:ed}],type:eu},{conditions:eE,rules:[{conditions:[ev],rules:[{endpoint:{url:"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:eS,headers:eS},type:ec}],type:eu},{error:"DualStack is enabled but this partition does not support DualStack",type:ed}],type:eu},{endpoint:{url:"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}",properties:eS,headers:eS},type:ec}],type:eu}],type:eu},{error:"Invalid Configuration: Missing Region",type:ed}]},ek=(e,t={})=>(0,en.B1)(ew,{endpointParams:e,logger:t.logger});en.DY.aws=es.Iu;let eC=e=>({apiVersion:"2019-06-10",base64Decoder:e?.base64Decoder??ee.G,base64Encoder:e?.base64Encoder??ee.s,disableHostPrefix:e?.disableHostPrefix??!1,endpointProvider:e?.endpointProvider??ek,extensions:e?.extensions??[],httpAuthSchemeProvider:e?.httpAuthSchemeProvider??B,httpAuthSchemes:e?.httpAuthSchemes??[{schemeId:"aws.auth#sigv4",identityProvider:e=>e.getIdentityProvider("aws.auth#sigv4"),signer:new f.AwsSdkSigV4Signer},{schemeId:"smithy.api#noAuth",identityProvider:e=>e.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new y.NoAuthSigner}],logger:e?.logger??new r.NoOpLogger,serviceId:e?.serviceId??"SSO",urlParser:e?.urlParser??Z.e,utf8Decoder:e?.utf8Decoder??et.$x,utf8Encoder:e?.utf8Encoder??et.GZ});var eR=s(97574);let eA=e=>{(0,r.emitWarningIfUnsupportedVersion)(process.version);let t=(0,eR.j)(e),s=()=>t().then(r.loadConfigsForDefaultMode),n=eC(e);return(0,f.emitWarningIfUnsupportedVersion)(process.version),{...n,...e,runtime:"node",defaultsMode:t,bodyLengthChecker:e?.bodyLengthChecker??Q.W,defaultUserAgentProvider:e?.defaultUserAgentProvider??(0,W.fV)({serviceId:n.serviceId,clientVersion:L.i8}),maxAttempts:e?.maxAttempts??(0,K.M)(M.Hs),region:e?.region??(0,K.M)($._c,$.zb),requestHandler:X.NA.create(e?.requestHandler??s),retryMode:e?.retryMode??(0,K.M)({...M.aK,default:async()=>(await s()).retryMode||Y.CA}),sha256:e?.sha256??J.k.bind(null,"sha256"),streamCollector:e?.streamCollector??X.CF,useDualstackEndpoint:e?.useDualstackEndpoint??(0,K.M)($.G7),useFipsEndpoint:e?.useFipsEndpoint??(0,K.M)($.NL)}};var eD=s(84959),eN=s(3166);let eO=e=>{let t=e.httpAuthSchemes,s=e.httpAuthSchemeProvider,n=e.credentials;return{setHttpAuthScheme(e){let s=t.findIndex(t=>t.schemeId===e.schemeId);-1===s?t.push(e):t.splice(s,1,e)},httpAuthSchemes:()=>t,setHttpAuthSchemeProvider(e){s=e},httpAuthSchemeProvider:()=>s,setCredentials(e){n=e},credentials:()=>n}},eq=e=>({httpAuthSchemes:e.httpAuthSchemes(),httpAuthSchemeProvider:e.httpAuthSchemeProvider(),credentials:e.credentials()}),ez=e=>e,eF=(e,t)=>{let s={...ez((0,eD.GW)(e)),...ez((0,r.getDefaultExtensionConfiguration)(e)),...ez((0,eN.getHttpHandlerExtensionConfiguration)(e)),...ez(eO(e))};return t.forEach(e=>e.configure(s)),{...e,...(0,eD.A1)(s),...(0,r.resolveDefaultRuntimeConfig)(s),...(0,eN.resolveHttpHandlerRuntimeConfig)(s),...eq(s)}};class eT extends r.Client{constructor(...[e]){let t=i(eA(e||{})),s=(0,$.Xb)(t),o=(0,n.uW)(s),r=(0,M.BC)(o),a=(0,F.S8)(r),d=eF(_((0,H.er)(a)),e?.extensions||[]);super(d),this.config=d,this.middlewareStack.use((0,M.NQ)(this.config)),this.middlewareStack.use((0,G.VG)(this.config)),this.middlewareStack.use((0,F.G2)(this.config)),this.middlewareStack.use((0,T.cV)(this.config)),this.middlewareStack.use((0,j.eV)(this.config)),this.middlewareStack.use((0,H.XJ)(this.config)),this.middlewareStack.use((0,y.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config,{httpAuthSchemeParametersProvider:this.getDefaultHttpAuthSchemeParametersProvider(),identityProviderConfigProvider:this.getIdentityProviderConfigProvider()})),this.middlewareStack.use((0,y.getHttpSigningPlugin)(this.config))}destroy(){super.destroy()}getDefaultHttpAuthSchemeParametersProvider(){return V}getIdentityProviderConfigProvider(){return async e=>new y.DefaultIdentityProviderConfig({"aws.auth#sigv4":e.credentials})}}}};